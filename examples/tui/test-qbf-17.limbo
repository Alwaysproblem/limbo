// fa(x1,fa(x2, (x1 v ~x1)^ (x2 v ~x2)))
Sort Bool
Name T, X -> Bool
Fun x1/0 -> Bool
Fun x2/0 -> Bool
Fun sorted1/0, sorted2/0, sorted3/0 -> Bool
Fun u0'1/0, u0'2/0, u0'3/0 -> Bool
Fun u1'1/0, u1'2/0, u1'3/0 -> Bool
Fun u2'1/0, u2'2/0, u2'3/0 -> Bool
Fun s1'2/0 -> Bool
Fun s2'2/0 -> Bool
Fun pass/0 -> Bool
Let Sorted := sorted1=T v sorted2=T v sorted3=T
KB: u0'1=T
KB: u0'2=T
KB: u0'3=T
KB: ~x1/=X -> pass=T
KB: ~x2/=X -> pass=T
KB: u0'1=T ^ u0'2=T ^ u0'3=T ^ x1/=X -> u1'1=T
KB: u0'1=T ^ u0'2=T ^ u0'3=T ^ x1/=X -> u1'2=T
KB: u0'1=T ^ u0'2=T ^ u0'3=T ^ x1/=X -> u1'3=T
KB: u1'1=T ^ u1'2=T ^ u1'3=T ^ x2/=X -> u2'1=T
KB: u1'1=T ^ u1'2=T ^ u1'3=T ^ x2/=X -> u2'2=T
KB: u1'1=T ^ u1'2=T ^ u1'3=T ^ x2/=X -> u2'3=T
KB: u0'1=T ^ u0'2=T ^ u0'3=T ^ ~x1/=X ^ ~s1'2/=X -> Sorted
KB: u0'1=T ^ u0'2=T ^ u0'3=T ^ ~x1/=X ^ s1'2/=X -> Sorted
KB: u1'1=T ^ u1'2=T ^ u1'3=T ^ ~x2/=X -> Sorted
KB: u2'1=T ^ u2'2=T ^ u2'3=T -> Sorted
Refute: K<1> Sorted
Assert: K<2> Sorted
Assert: K<2> (Sorted ^ (~pass=T -> ((x1=T v ~x1=T)^ (x2=T v ~x2=T))))
