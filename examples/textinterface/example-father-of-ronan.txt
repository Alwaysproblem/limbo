// Who's Ronan's father, Woody or Frank?
// A non-religious version of the Jesus-example.
// Based on some what on some gossip on the web.

Sort ENTITY;
Sort BOOL;

Variable x -> ENTITY;
Variable y -> ENTITY;

Name Mia -> ENTITY;
Name Frank -> ENTITY;
Name Woody -> ENTITY;
Name Ronan -> ENTITY;
Name True -> BOOL;

Function fatherOf/1 -> ENTITY;
Function motherOf/1 -> ENTITY;
Function is_singer/1 -> BOOL;

KB (motherOf(Ronan) == Mia);
KB (fatherOf(Ronan) == Frank || fatherOf(Ronan) == Woody);
KB (is_singer(Mia) != True);
KB (is_singer(Frank) == True);
KB (is_singer(Woody) != True);

Entails (0, fatherOf(Ronan) == Frank || fatherOf(Ronan) == Woody);

Let phi := Ex x (x == fatherOf(Ronan));
Entails (0, phi);
Entails (1, phi);

Let phi := Woody == fatherOf(Ronan);
Consistent (0, phi);
Consistent (1, phi);

Entails (0, Woody == fatherOf(Ronan) && Frank == fatherOf(Ronan) || Woody == fatherOf(Ronan));

Let phi := motherOf(Ronan) == fatherOf(Ronan);
Entails    (0, phi);
Consistent (0, phi);
Entails    (0, !phi);
Consistent (0, !phi);
Consistent (1, !phi);

Entails (0, is_singer(motherOf(Ronan)) != True);

Let phi := is_singer(fatherOf(Ronan)) != True;
Consistent (1, phi);
Consistent (1, !phi);

Entails (1, Ex x is_singer(x) != True);
Entails (1, Fa x is_singer(x) != True);

