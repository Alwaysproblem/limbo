// Who's Dionysos' mother, Semele, Demeter, or Persephone?
// A non-modern-religious version of the Jesus-example.

Sort ENTITY;
Sort BOOL;

Variable x -> ENTITY;
Variable y -> ENTITY;

Name Dionysos -> ENTITY;
Name Zeus -> ENTITY;
Name Demeter -> ENTITY;
Name Persephone -> ENTITY;
Name Semele -> ENTITY;
Name T -> BOOL;

Function motherOf/1 -> ENTITY;
Function fatherOf/1 -> ENTITY;
Function is_mortal/1 -> BOOL;

KB (Zeus == fatherOf(Dionysos));
KB (Persephone == motherOf(Dionysos) || Demeter == motherOf(Dionysos) || Semele == motherOf(Dionysos));
KB (is_mortal(Zeus) != T);
KB (is_mortal(Persephone) != T);
KB (motherOf(Dionysos) != x || x == Semele || is_mortal(x) != T);
KB (is_mortal(Dionysos) != T);

Entails (0, Persephone == motherOf(Dionysos) || Demeter == motherOf(Dionysos) || Semele == motherOf(Dionysos));

Let phi := Ex x (x == motherOf(Dionysos));
Entails (0, phi);
Entails (1, phi);

Let phi := Persephone == motherOf(Dionysos);
Consistent (0, phi);
Consistent (1, phi);

Entails (0, Persephone == motherOf(Dionysos) && Demeter == motherOf(Dionysos) || Semele == motherOf(Dionysos));

Let phi := fatherOf(Dionysos) == motherOf(Dionysos);
Entails    (0, phi);
Consistent (0, phi);
Entails    (0, !phi);
Consistent (0, !phi);
Consistent (1, !phi);

Entails (0, is_mortal(fatherOf(Dionysos)) != T);

Let phi := is_mortal(motherOf(Dionysos)) == T;
Consistent (1, phi);
Consistent (1, !phi);

Entails (1, Ex x is_mortal(x) == T);
Entails (1, Fa x is_mortal(x) == T);

