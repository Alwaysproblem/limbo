// Who's Sonny's father, Frank or Fred?

Sort HUMAN;
Sort BOOL;

Variable x -> HUMAN;
Variable y -> HUMAN;

Name Mary -> HUMAN;
Name Frank -> HUMAN;
Name Fred -> HUMAN;
Name Sonny -> HUMAN;
Name True -> BOOL;

Function fatherOf/1 -> HUMAN;
Function motherOf/1 -> HUMAN;

KB (motherOf(Sonny) == Mary);
KB (fatherOf(Sonny) == Frank || fatherOf(Sonny) == Fred);

Entails (0, fatherOf(Sonny) == Frank || fatherOf(Sonny) == Fred);

Let phi := Ex x (x == fatherOf(Sonny));
Entails (0, phi);
Entails (1, phi);

Let phi := Frank == fatherOf(Sonny);
Consistent (0, phi);
Consistent (1, phi);

Entails (0, Fred == fatherOf(Sonny) && Frank == fatherOf(Sonny) || Fred == fatherOf(Sonny));

Let phi := motherOf(Sonny) == fatherOf(Sonny);
Entails    (0, phi);
Consistent (0, phi);
Entails    (0, !phi);
Consistent (0, !phi);
Consistent (1, !phi);

